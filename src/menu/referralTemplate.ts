import { MenuTemplate, createBackMainMenuButtons } from 'telegraf-inline-menu'
import { SessionContext } from '../context/context'
import { QRCodeGen } from '../utils/QRCodeGenerator'
import { UserModel } from '../models/userModel'

const QRCodeModel = new QRCodeGen()
const userModel = new UserModel()


const referralTemplate = new MenuTemplate<SessionContext>(async context => {
    const user = await userModel.getUser(context.from?.id!)
    const refCount = await userModel.getRefCount(context.from?.id!)
    const refLink = process.env.BOT_INVITE_URL + '?start=' + user.refHash
    const refs = 0

    if (refCount == null) {
        return {
            text: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!'
        }
    }

    const text = `*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤*\n_üîπ1-–æ–≥–æ —É—Ä–æ–≤–Ω—è:_ ${refCount.firstLevel}\n_üîπ2-–æ–≥–æ —É—Ä–æ–≤–Ω—è:_ ${refCount.secondLevel}\n_üîπ3-–æ–≥–æ —É—Ä–æ–≤–Ω—è:_ ${refCount.thirdLevel}\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n${refLink}`

    //const text = `–£ –≤–∞—Å *${refs}* —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n${refLink}`

    return {
        text,
        parse_mode: 'Markdown',
        disable_web_page_preview: true
    }
})

const referralQRTemplate = new MenuTemplate<SessionContext>(async context => {
    const user = await userModel.getUser(context.from?.id!)
    const QRCode = await QRCodeModel.makeReferralQRCode(user.refHash)

    const text = `üßæ QR –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è`

    return {
        type: 'photo',
        media: {
            source: Buffer.from(QRCode, 'base64')
        },
        text,
        parse_mode: 'Markdown'
    }
})

referralTemplate.submenu('üßæ–ü–æ–∫–∞–∑–∞—Ç—å QR –∫–æ–¥', 'getRefQR', referralQRTemplate)

referralQRTemplate.manualRow(createBackMainMenuButtons('üîô –ù–∞–∑–∞–¥', ''))
referralTemplate.manualRow(createBackMainMenuButtons('üîô –ù–∞–∑–∞–¥', ''))

export { referralTemplate }